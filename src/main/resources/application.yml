server:
  port: 8080

#eureka:
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://127.0.0.1:8761/eureka

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:h2:tcp://localhost/~/user-service
    username: sa
    password:
    driver-class-name: org.h2.Driver
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ed9g7SnNyBjkgeGVe0us
            client-secret: 5JmXE1WAmu
            redirect-uri: http://localhost:8080/login/ouath2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            client-name: Naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌.

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        # show_sql: true
        format_sql: true

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace

# Token 유효기간 1일
token:
  expiration_time: 86400000
  secret: member_token
